name: CI/CD Workflow

on:
  push:
    branches:
      - develop
    tags:
      - "v*"

jobs:
  # Debug: Display all vars variables
  debug-vars:
    name: Debug - Display Vars Variables
    runs-on: ubuntu-latest
    steps:
      - name: Display Vars Variables
        run: |
          echo "=== GITHUB VARS VARIABLES ==="
          echo "DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}"
          echo "API_URL_DEV: ${{ vars.API_URL_DEV }}"
          echo "API_URL_PROD: ${{ vars.API_URL_PROD }}"
          echo "NEXT_PUBLIC_APP_NAME: ${{ vars.NEXT_PUBLIC_APP_NAME }}"
          echo "NEXT_PUBLIC_API_BASE_PATH: ${{ vars.NEXT_PUBLIC_API_BASE_PATH }}"
          echo "NEXT_PUBLIC_APP_URL_DEV: ${{ vars.NEXT_PUBLIC_APP_URL_DEV }}"
          echo "NEXT_PUBLIC_APP_URL_PROD: ${{ vars.NEXT_PUBLIC_APP_URL_PROD }}"
          echo "NEXT_PUBLIC_APP_AUTH_PATH: ${{ vars.NEXT_PUBLIC_APP_AUTH_PATH }}"
          echo "NEXT_PUBLIC_TERMINOLOGY_SERVER: ${{ vars.NEXT_PUBLIC_TERMINOLOGY_SERVER }}"
          echo ""
          echo "=== GITHUB CONTEXT VARIABLES ==="
          echo "GITHUB_REF: ${{ github.ref }}"
          echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
          echo "GITHUB_SHA: ${{ github.sha }}"
          echo "GITHUB_ACTOR: ${{ github.actor }}"
          echo "GITHUB_RUN_NUMBER: ${{ github.run_number }}"
          echo "GITHUB_EVENT_HEAD_COMMIT_TIMESTAMP: ${{ github.event.head_commit.timestamp }}"
          echo ""
          echo "=== COMPUTED / BUILD INPUT VALUES (will be passed to docker-build) ==="
          echo "TZ_ARG: Asia/Jakarta"
          echo "AUTHOR: ${{ github.actor }}"
          echo "VERSION: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'develop' }}"
          echo "TAG: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'develop' }}"
          echo "GIT_COMMIT: ${{ github.sha }}"
          echo "BUILD_TIME: ${{ github.event.head_commit.timestamp }}"
          echo "RUN_NUMBER: ${{ github.run_number }}"
          echo "IS_DEV: ${{ github.ref_name == 'develop' }}"
          echo "IS_PROD: ${{ startsWith(github.ref, 'refs/tags/v') }}"
          echo "NEXT_PUBLIC_API_URL_DEV: ${{ vars.NEXT_PUBLIC_API_URL_DEV }}"
          echo "NEXT_PUBLIC_API_URL_PROD: ${{ vars.NEXT_PUBLIC_API_URL_PROD }}"
          echo "NEXT_PUBLIC_APP_NAME: ${{ vars.NEXT_PUBLIC_APP_NAME }}"
          echo "NEXT_PUBLIC_API_BASE_PATH: ${{ vars.NEXT_PUBLIC_API_BASE_PATH }}"
          echo "NEXT_PUBLIC_APP_URL_DEV: ${{ vars.NEXT_PUBLIC_APP_URL_DEV }}"
          echo "NEXT_PUBLIC_APP_URL_PROD: ${{ vars.NEXT_PUBLIC_APP_URL_PROD }}"
          echo "NEXT_PUBLIC_APP_AUTH_PATH: ${{ vars.NEXT_PUBLIC_APP_AUTH_PATH }}"
          echo "NEXT_PUBLIC_TERMINOLOGY_SERVER: ${{ vars.NEXT_PUBLIC_TERMINOLOGY_SERVER }}"
          echo ""
          echo "=== SECRETS (masked) ==="
          echo "DOCKER_PASSWORD: [MASKED]"
          echo "WEBHOOK_AUTH: [MASKED]"

  # Build and push Docker image
  docker:
    name: Build Docker Image
    needs: debug-vars
    uses: ./.github/workflows/docker-build.yml
    with:
      TZ_ARG: Asia/Jakarta
      AUTHOR: ${{ github.actor }}
      # Version control parameters
      VERSION: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'develop' }}
      TAG: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'develop' }}
      GIT_COMMIT: ${{ github.sha }}
      BUILD_TIME: ${{ github.event.head_commit.timestamp }}
      RUN_NUMBER: ${{ github.run_number }}
      # Environment flags
      IS_DEV: ${{ github.ref_name == 'develop' }}
      IS_PROD: ${{ startsWith(github.ref, 'refs/tags/v') }}
      # NEXT_PUBLIC_* inputs required by docker-build.yml
      NEXT_PUBLIC_API_URL_DEV: ${{ vars.NEXT_PUBLIC_API_URL_DEV }}
      NEXT_PUBLIC_API_URL_PROD: ${{ vars.NEXT_PUBLIC_API_URL_PROD }}
      NEXT_PUBLIC_APP_NAME: ${{ vars.NEXT_PUBLIC_APP_NAME }}
      NEXT_PUBLIC_API_BASE_PATH: ${{ vars.NEXT_PUBLIC_API_BASE_PATH }}
      NEXT_PUBLIC_APP_URL_DEV: ${{ vars.NEXT_PUBLIC_APP_URL_DEV }}
      NEXT_PUBLIC_APP_URL_PROD: ${{ vars.NEXT_PUBLIC_APP_URL_PROD }}
      NEXT_PUBLIC_APP_AUTH_PATH: ${{ vars.NEXT_PUBLIC_APP_AUTH_PATH }}
      NEXT_PUBLIC_TERMINOLOGY_SERVER: ${{ vars.NEXT_PUBLIC_TERMINOLOGY_SERVER }}           
    secrets:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      WEBHOOK_AUTH: ${{ secrets.WEBHOOK_AUTH }}

  # Deploy to appropriate environment
  deploy-dev:
    name: Deploy to Dev (Coolify)
    needs: docker
    if: ${{ github.ref_name == 'develop' }}
    uses: ./.github/workflows/trigger-coolify.yml
    secrets:
      COOLIFY_TRIGGER_URL: ${{ secrets.COOLIFY_TRIGGER_URL_DEV }}
      COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN_DEV }}

  deploy-prod:
    name: Deploy to Prod (Coolify)
    needs: docker
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    uses: ./.github/workflows/trigger-coolify.yml
    secrets:
      COOLIFY_TRIGGER_URL: ${{ secrets.COOLIFY_TRIGGER_URL_PROD }}
      COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN_PROD }}
  
  deploy-check:
    name: Check Konsulin API Container Status
    needs: [deploy-dev, deploy-prod]
    if: ${{ always() }}
    uses: ./.github/workflows/deploy.yml
    secrets:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_KEY: ${{ secrets.SSH_KEY }}