name: CI/CD Workflow

on:
  pull_request:
    types:
      - closed
    branches:
      - develop
      - main

jobs:
  # Debug: Display all vars variables
  debug-vars:
    name: Debug - Display Vars Variables
    runs-on: ubuntu-latest
    steps:
      - name: Display Vars Variables
        run: |
          echo "=== GITHUB VARS VARIABLES ==="
          echo "DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}"
          echo "APP_NAME: ${{ vars.APP_NAME }}"
          echo ""
          echo "=== GITHUB CONTEXT VARIABLES ==="
          echo "GITHUB_REF: ${{ github.ref }}"
          echo "GITHUB_REF_NAME: ${{ github.ref_name }}"
          echo "GITHUB_SHA: ${{ github.sha }}"
          echo "GITHUB_ACTOR: ${{ github.actor }}"
          echo "GITHUB_RUN_NUMBER: ${{ github.run_number }}"
          echo "GITHUB_EVENT_HEAD_COMMIT_TIMESTAMP: ${{ github.event.head_commit.timestamp }}"
          echo ""
          echo "=== COMPUTED VALUES ==="
          echo "BASE_REF: ${{ github.event.pull_request.base.ref }}"
          echo "IS_DEV: ${{ github.event.pull_request.merged && github.event.pull_request.base.ref == 'develop' }}"
          echo "IS_PROD: ${{ github.event.pull_request.merged && github.event.pull_request.base.ref == 'main' }}"

  # Build and push Docker image
  docker:
    if: github.event.pull_request.merged == true
    name: Build Docker Image
    needs: debug-vars
    uses: ./.github/workflows/docker-build.yml
    with:
      TZ_ARG: Asia/Jakarta
      AUTHOR: ${{ github.actor }}
      GIT_COMMIT: ${{ github.sha }}
      BUILD_TIME: ${{ github.event.head_commit.timestamp }}
      RUN_NUMBER: ${{ github.run_number }}
      IS_DEV: ${{ github.event.pull_request.merged && github.event.pull_request.base.ref == 'develop' }}
      IS_PROD: ${{ github.event.pull_request.merged && github.event.pull_request.base.ref == 'main' }}
      APP_NAME: ${{ vars.APP_NAME }}
    secrets:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      WEBHOOK_AUTH: ${{ secrets.WEBHOOK_AUTH }}

  # Deploy to appropriate environment
  deploy-dev:
    name: Deploy to Dev (Coolify)
    needs: docker
    if: ${{ github.event.pull_request.merged && github.event.pull_request.base.ref == 'develop' }}
    uses: ./.github/workflows/trigger-coolify.yml
    secrets:
      COOLIFY_TRIGGER_URL: ${{ secrets.COOLIFY_TRIGGER_URL_DEV }}
      COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN_DEV }}

  deploy-prod:
    name: Deploy to Prod (Coolify)
    needs: docker
    if: ${{ github.event.pull_request.merged && github.event.pull_request.base.ref == 'main' }}
    uses: ./.github/workflows/trigger-coolify.yml
    secrets:
      COOLIFY_TRIGGER_URL: ${{ secrets.COOLIFY_TRIGGER_URL_PROD }}
      COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN_PROD }}
  
  deploy-check:
    name: Check Konsulin API Container Status
    needs: [deploy-dev, deploy-prod]
    if: ${{ always() }}
    uses: ./.github/workflows/deploy.yml
    secrets:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
